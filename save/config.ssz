//Video Settings
const bool OpenGL = false;
const bool AspectRatio = false;
const bool FullScreen = false;
const bool FullScreenExclusive = false; //False: Borderless FullScreen, True: Exclusive FullScreen
const int WindowType = 1; //1: Resizable, 2: Bordered A, 3: Bordered B, 4: No Decoration
const int Width = 960;
const int Height = 720;
const int Brightness = 256;
const float Opacity = 1;

//Audio Settings
const float GlVol = 0.8;
const float SEVol = 0.8;
const float BGMVol = 0;
const float PanStr = 0.8;

//Perfomance Settings
const bool SaveMemory = false;
const int HelperMax = 56;
const int PlayerProjectileMax = 50;
const int ExplodMax = 256;
const int AfterImageMax = 8;

//Game Settings
const int GameSpeed = 60; //frames/second
const float Attack_LifeToPowerMul = 0.7;
const float GetHit_LifeToPowerMul = 0.6;
const float Super_TargetDefenceMul = 1.5;
const float LifebarFontScale = 1;

//Portraits Settings
const int CharPortraitsGroup = 9000;
const int CharFacePortraitIndex = 0;
const int CharBigPortraitIndex = 1;
const int CharWinnerPortraitIndex = 2;
const int CharLoserPortraitIndex = 3;
const int CharOrderPortraitIndex = 4;
const int CharVSPortraitIndex = 5;
const int CharResultsPortraitIndex = 6;
const int CharExtraPortraitIndex = 7;

const int StagePortraitsGroup = 9000;
const int StageIconPortraitIndex = 0;
const int StageBigPortraitIndex = 1;
const int StageVSPortraitIndex = 2;
const int StageWinPortraitIndex = 3;
const int StageExtraPortraitIndex = 4;

//System Settings
const ^/char Executable = "Ikemen Plus Ultra.exe";
const ^/char WindowTitle = "I.K.E.M.E.N. PLUS ULTRA";
const ^/char listenPort = "7500";
const ^/char UserName = "Nickname";
//const ^/char ScreenshotFolder = "screenshots/Test.png"; //Path to directory where Screenshots will be saves.
const ^/char GlobalAnims = "data/common.air"; //Common Animations using character's local sprites
const ^/char GlobalCommands = "data/common.cmd"; //Common Commands
const ^/char GlobalMatch = "data/match.cns"; //Common States (CNS)
const ^/char system = "script/main.lua"; //Lua script file initializing game mode logic loop.

//Input Settings
//const ^/char GamepadMappings = "lib/gamecontrollerdb.txt"; //Path to a database of game controller mappings (currently not functional).
lib sdl = <alpha/sdlplugin.ssz>;
type k_t = |sdl.SDLKey;
/%&Keys in;

//P1 KEYBOARD - BATTLE
in.new[0].set(
  -1,
  (int)k_t::UP,
  (int)k_t::DOWN,
  (int)k_t::LEFT,
  (int)k_t::RIGHT,
  (int)k_t::a,
  (int)k_t::s,
  (int)k_t::d,
  (int)k_t::z,
  (int)k_t::x,
  (int)k_t::c,
  (int)k_t::q,
  (int)k_t::e,
  (int)k_t::v,
  (int)k_t::f);

//P2 KEYBOARD - BATTLE
in.new[1].set(
  -1,
  (int)k_t::KP_8,
  (int)k_t::KP_2,
  (int)k_t::KP_4,
  (int)k_t::KP_6,
  (int)k_t::u,
  (int)k_t::i,
  (int)k_t::o,
  (int)k_t::j,
  (int)k_t::k,
  (int)k_t::l,
  (int)k_t::KP_7,
  (int)k_t::KP_9,
  (int)k_t::KP_5,
  (int)k_t::KP_0);

//P1 GAMEPAD - BATTLE
in.new[2].set(
  0, -3, -4, -1, -2, 0, 1, 4, 2, 3, 5, 8, 9, -10, 6);

//P2 GAMEPAD - BATTLE
in.new[3].set(
  1, -3, -4, -1, -2, 0, 1, 4, 2, 3, 5, 8, 9, -10, 6);

//P1 KEYBOARD - MENU
in.new[10].set(
  -1,
  (int)k_t::UP,
  (int)k_t::DOWN,
  (int)k_t::LEFT,
  (int)k_t::RIGHT,
  (int)k_t::a,
  (int)k_t::s,
  (int)k_t::d,
  (int)k_t::z,
  (int)k_t::x,
  (int)k_t::c,
  (int)k_t::q,
  (int)k_t::e,
  (int)k_t::BACKSPACE,
  (int)k_t::RETURN);

//P2 KEYBOARD - MENU
in.new[11].set(
  -1,
  (int)k_t::KP_8,
  (int)k_t::KP_2,
  (int)k_t::KP_4,
  (int)k_t::KP_6,
  (int)k_t::u,
  (int)k_t::i,
  (int)k_t::o,
  (int)k_t::j,
  (int)k_t::k,
  (int)k_t::l,
  (int)k_t::KP_7,
  (int)k_t::KP_9,
  (int)k_t::KP_PERIOD,
  (int)k_t::KP_ENTER);

//P1 GAMEPAD - MENU
in.new[12].set(
  0, -7, -8, -5, -6, 2, 3, 4, 5, 8, 9, 6, 0, 1, 7);

//P2 GAMEPAD - MENU
in.new[13].set(
  1, -7, -8, -5, -6, 2, 3, 4, 5, 8, 9, 6, 0, 1, 7);

const bool IgnoreMostErrors = true;

public &Keys
{
	public int jn = -2, u, d, l, r, a, b, c, x, y, z, q, w, e, s;
	public void set(int jn, int u, int d, int l, int r, int a, int b, int c, int x, int y, int z, int q, int w, int e, int s)
	{
		`jn = jn;
		`u = u;
		`d = d;
		`l = l;
		`r = r;
		`a = a;
		`b = b;
		`c = c;
		`x = x;
		`y = y;
		`z = z;
		`q = q;
		`w = w;
		`e = e;
		`s = s;
	}
}