From: <Saved by Blink>
Snapshot-Content-Location: https://msva.github.io/lua-htmlparser/
Subject: LuaRock "htmlparser"
Date: Mon, 20 Oct 2025 13:45:29 -0400
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--jClecEnZR2ePqNzar4qF3LUPYBfZHrfdX0WC4SnGTl----"


------MultipartBoundary--jClecEnZR2ePqNzar4qF3LUPYBfZHrfdX0WC4SnGTl----
Content-Type: text/html
Content-ID: <frame-4FE87D00E0665E6B142E7416148D682E@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://msva.github.io/lua-htmlparser/

<!DOCTYPE html><html><head><meta http-equiv=3D"Content-Type" content=3D"tex=
t/html; charset=3DUTF-8">
   =20
    <meta http-equiv=3D"X-UA-Compatible" content=3D"chrome=3D1">
    <meta name=3D"description" content=3D"LuaRock &quot;htmlparser&quot; : =
Parse HTML text into a tree of elements with selectors">

    <link rel=3D"stylesheet" type=3D"text/css" media=3D"screen" href=3D"htt=
ps://msva.github.io/lua-htmlparser/stylesheets/stylesheet.css">

    <title>LuaRock "htmlparser"</title>
  </head>

  <body>

    <!-- HEADER -->
    <div id=3D"header_wrap" class=3D"outer">
        <header class=3D"inner">
          <a id=3D"forkme_banner" href=3D"https://github.com/wscherphof/lua=
-htmlparser">View on GitHub</a>

          <h1 id=3D"project_title">LuaRock "htmlparser"</h1>
          <h2 id=3D"project_tagline">Parse HTML text into a tree of element=
s with selectors</h2>

            <section id=3D"downloads">
              <a class=3D"zip_download_link" href=3D"https://github.com/wsc=
herphof/lua-htmlparser/zipball/master">Download this project as a .zip file=
</a>
              <a class=3D"tar_download_link" href=3D"https://github.com/wsc=
herphof/lua-htmlparser/tarball/master">Download this project as a tar.gz fi=
le</a>
            </section>
        </header>
    </div>

    <!-- MAIN CONTENT -->
    <div id=3D"main_content_wrap" class=3D"outer">
      <section id=3D"main_content" class=3D"inner">
        <h2>
<a name=3D"install" class=3D"anchor" href=3D"https://msva.github.io/lua-htm=
lparser/#install"><span class=3D"octicon octicon-link"></span></a>Install</=
h2>

<p>Htmlparser is a listed <a href=3D"http://luarocks.org/repositories/rocks=
/">LuaRock</a>. Install using <a href=3D"http://www.luarocks.org/">LuaRocks=
</a>: <code>luarocks install htmlparser</code></p>

<h3>
<a name=3D"dependencies" class=3D"anchor" href=3D"https://msva.github.io/lu=
a-htmlparser/#dependencies"><span class=3D"octicon octicon-link"></span></a=
>Dependencies</h3>

<p>Htmlparser depends on <a href=3D"http://www.lua.org/download.html">Lua 5=
.2</a>, and on the <a href=3D"http://wscherphof.github.com/lua-set/">"set"<=
/a> LuaRock, which is installed along automatically. To be able to run the =
tests, <a href=3D"https://github.com/dcurrie/lunit">lunitx</a> also comes a=
long as a LuaRock</p>

<h2>
<a name=3D"usage" class=3D"anchor" href=3D"https://msva.github.io/lua-htmlp=
arser/#usage"><span class=3D"octicon octicon-link"></span></a>Usage</h2>

<p>Start off with</p>

<div class=3D"highlight highlight-lua"><pre><span class=3D"nb">require</spa=
n><span class=3D"p">(</span><span class=3D"s2">"</span><span class=3D"s">lu=
arocks.loader"</span><span class=3D"p">)</span>
<span class=3D"kd">local</span> <span class=3D"n">htmlparser</span> <span c=
lass=3D"o">=3D</span> <span class=3D"nb">require</span><span class=3D"p">(<=
/span><span class=3D"s2">"</span><span class=3D"s">htmlparser"</span><span =
class=3D"p">)</span>
</pre></div>

<p>Then, parse some html:</p>

<div class=3D"highlight highlight-lua"><pre><span class=3D"kd">local</span>=
 <span class=3D"n">root</span> <span class=3D"o">=3D</span> <span class=3D"=
n">htmlparser</span><span class=3D"p">.</span><span class=3D"n">parse</span=
><span class=3D"p">(</span><span class=3D"n">htmlstring</span><span class=
=3D"p">)</span>
</pre></div>

<p>The input to parse may be the contents of a complete html document, or a=
ny valid html snippet, as long as all tags are correctly opened and closed.
Now, find specific contained elements by selecting:</p>

<div class=3D"highlight highlight-lua"><pre><span class=3D"kd">local</span>=
 <span class=3D"n">elements</span> <span class=3D"o">=3D</span> <span class=
=3D"n">root</span><span class=3D"p">:</span><span class=3D"nb">select</span=
><span class=3D"p">(</span><span class=3D"n">selectorstring</span><span cla=
ss=3D"p">)</span>
</pre></div>

<p>Or in shorthand:</p>

<div class=3D"highlight highlight-lua"><pre><span class=3D"kd">local</span>=
 <span class=3D"n">elements</span> <span class=3D"o">=3D</span> <span class=
=3D"n">root</span><span class=3D"p">(</span><span class=3D"n">selectorstrin=
g</span><span class=3D"p">)</span>
</pre></div>

<p>This wil return a list of elements, all of which are of the same type as=
 the root element, and thus support selecting as well, if ever needed:</p>

<div class=3D"highlight highlight-lua"><pre><span class=3D"k">for</span> <s=
pan class=3D"n">_</span><span class=3D"p">,</span><span class=3D"n">e</span=
> <span class=3D"k">in</span> <span class=3D"nb">ipairs</span><span class=
=3D"p">(</span><span class=3D"n">elements</span><span class=3D"p">)</span> =
<span class=3D"k">do</span>
    <span class=3D"nb">print</span><span class=3D"p">(</span><span class=3D=
"n">e</span><span class=3D"p">.</span><span class=3D"n">name</span><span cl=
ass=3D"p">)</span>
    <span class=3D"kd">local</span> <span class=3D"n">subs</span> <span cla=
ss=3D"o">=3D</span> <span class=3D"n">e</span><span class=3D"p">(</span><sp=
an class=3D"n">subselectorstring</span><span class=3D"p">)</span>
    <span class=3D"k">for</span> <span class=3D"n">_</span><span class=3D"p=
">,</span><span class=3D"n">sub</span> <span class=3D"k">in</span> <span cl=
ass=3D"nb">ipairs</span><span class=3D"p">(</span><span class=3D"n">subs</s=
pan><span class=3D"p">)</span> <span class=3D"k">do</span>
        <span class=3D"nb">print</span><span class=3D"p">(</span><span clas=
s=3D"s2">"</span><span class=3D"s">"</span><span class=3D"p">,</span> <span=
 class=3D"n">sub</span><span class=3D"p">.</span><span class=3D"n">name</sp=
an><span class=3D"p">)</span>
    <span class=3D"k">end</span>
<span class=3D"k">end</span>
</pre></div>

<p>The root element is a container for the top level elements in the parsed=
 text, i.e. the <code>&lt;html&gt;</code> element in a parsed html document=
 would be a child of the returned root element.</p>

<h2>
<a name=3D"selectors" class=3D"anchor" href=3D"https://msva.github.io/lua-h=
tmlparser/#selectors"><span class=3D"octicon octicon-link"></span></a>Selec=
tors</h2>

<p>Supported selectors are a subset of <a href=3D"http://api.jquery.com/cat=
egory/selectors/">jQuery's selectors</a>:</p>

<ul>
<li>
<code>"*"</code> all contained elements</li>
<li>
<code>"element"</code> elements with the given tagname</li>
<li>
<code>"#id"</code> elements with the given id attribute value</li>
<li>
<code>".class"</code> elements with the given classname in the class attrib=
ute</li>
<li>
<code>"[attribute]"</code> elements with an attribute of the given name</li=
>
<li>
<code>"[attribute=3D'value']"</code> equals: elements with the given value =
for the given attribute</li>
<li>
<code>"[attribute!=3D'value']"</code> not equals: elements without the give=
n attribute, or having the attribute, but with a different value</li>
<li>
<code>"[attribute|=3D'value']"</code> prefix: attribute's value is given va=
lue, or starts with given value, followed by a hyphen (<code>-</code>)</li>
<li>
<code>"[attribute*=3D'value']"</code> contains: attribute's value contains =
given value</li>
<li>
<code>"[attribute~=3D'value']"</code> word: attribute's value is a space-se=
parated token, where one of the tokens is the given value</li>
<li>
<code>"[attribute^=3D'value']"</code> starts with: attribute's value starts=
 with given value</li>
<li>
<code>"[attribute$=3D'value']"</code> ends with: attribute's value ends wit=
h given value</li>
<li>
<code>":not(selectorstring)"</code> elements not selected by given selector=
 string</li>
<li>
<code>"ancestor descendant"</code> elements selected by the <code>descendan=
t</code> selector string, that are a descendant of any element selected by =
the <code>ancestor</code> selector string</li>
<li>
<code>"parent &gt; child"</code> elements selected by the <code>child</code=
> selector string, that are a child element of any element selected by the =
<code>parent</code> selector string</li>
</ul><p>Selectors can be combined; e.g. <code>".class:not([attribute]) elem=
ent.class"</code></p>

<h2>
<a name=3D"element-type" class=3D"anchor" href=3D"https://msva.github.io/lu=
a-htmlparser/#element-type"><span class=3D"octicon octicon-link"></span></a=
>Element type</h2>

<p>All tree elements provide, apart from <code>:select</code> and <code>()<=
/code>, the following accessors:</p>

<h3>
<a name=3D"basic" class=3D"anchor" href=3D"https://msva.github.io/lua-htmlp=
arser/#basic"><span class=3D"octicon octicon-link"></span></a>Basic</h3>

<ul>
<li>
<code>.name</code> the element's tagname</li>
<li>
<code>.attributes</code> a table with keys and values for the element's att=
ributes; <code>{}</code> if none</li>
<li>
<code>.id</code> the value of the element's id attribute; <code>nil</code> =
if not present</li>
<li>
<code>.classes</code> an array with the classes listed in element's class a=
ttribute; <code>{}</code> if none</li>
<li>
<code>:getcontent()</code> the raw text between the opening and closing tag=
s of the element; <code>""</code> if none</li>
<li>
<code>.nodes</code> an array with the element's child elements, <code>{}</c=
ode> if none</li>
<li>
<code>.parent</code> the element that contains this element; <code>root.par=
ent</code> is <code>nil</code>
</li>
</ul><h3>
<a name=3D"other" class=3D"anchor" href=3D"https://msva.github.io/lua-htmlp=
arser/#other"><span class=3D"octicon octicon-link"></span></a>Other</h3>

<ul>
<li>
<code>.index</code> sequence number of elements in order of appearance; roo=
t index is <code>0</code>
</li>
<li>
<code>:gettext()</code> the complete element text, starting with <code>"&lt=
;tagname"</code> and ending with <code>"/&gt;"</code> or <code>"&lt;/tagnam=
e&gt;"</code>
</li>
<li>
<code>.level</code> how deep the element is in the tree; root level is <cod=
e>0</code>
</li>
<li>
<code>.root</code> the root element of the tree; <code>root.root</code> is =
<code>root</code>
</li>
<li>
<code>.deepernodes</code> a <a href=3D"http://wscherphof.github.com/lua-set=
/">Set</a> containing all elements in the tree beneath this element, includ=
ing this element's <code>.nodes</code>; <code>{}</code> if none</li>
<li>
<code>.deeperelements</code> a table with a key for each distinct tagname i=
n <code>.deepernodes</code>, containing a <a href=3D"http://wscherphof.gith=
ub.com/lua-set/">Set</a> of all deeper element nodes with that name; <code>=
{}</code> if none</li>
<li>
<code>.deeperattributes</code> as <code>.deeperelements</code>, but keyed o=
n attribute name</li>
<li>
<code>.deeperids</code> as <code>.deeperelements</code>, but keyed on id va=
lue</li>
<li>
<code>.deeperclasses</code> as <code>.deeperelements</code>, but keyed on c=
lass name</li>
</ul><h2>
<a name=3D"limitations" class=3D"anchor" href=3D"https://msva.github.io/lua=
-htmlparser/#limitations"><span class=3D"octicon octicon-link"></span></a>L=
imitations</h2>

<ul>
<li>Attribute values in selector strings cannot contain any spaces</li>
<li>The spaces before and after the <code>&gt;</code> in a <code>parent &gt=
; child</code> relation are mandatory </li>
<li>
<code>&lt;!</code> elements (including doctype, comments, and CDATA) are no=
t parsed; markup within CDATA is <em>not</em> escaped</li>
<li>Textnodes are no separate tree elements; in <code>local root =3D htmlpa=
rser.parse("&lt;p&gt;line1&lt;br /&gt;line2&lt;/p&gt;")</code>, <code>root.=
nodes[1]:getcontent()</code> is <code>"line1&lt;br /&gt;line2"</code>, whil=
e <code>root.nodes[1].nodes[1].name</code> is <code>"br"</code>
</li>
<li>No start or end tags are implied when <a href=3D"http://www.w3.org/TR/h=
tml5/syntax.html#optional-tags">omitted</a>. Only the <a href=3D"http://www=
.w3.org/TR/html5/syntax.html#void-elements">void elements</a> should not ha=
ve an end tag</li>
<li>No validation is done for tag or attribute names or nesting of element =
types. The list of void elements is in fact the only part specific to HTML<=
/li>
</ul><h2>
<a name=3D"examples" class=3D"anchor" href=3D"https://msva.github.io/lua-ht=
mlparser/#examples"><span class=3D"octicon octicon-link"></span></a>Example=
s</h2>

<p>See <code>./doc/sample.lua</code></p>

<h2>
<a name=3D"tests" class=3D"anchor" href=3D"https://msva.github.io/lua-htmlp=
arser/#tests"><span class=3D"octicon octicon-link"></span></a>Tests</h2>

<p>See <code>./tst/init.lua</code></p>

<h2>
<a name=3D"license" class=3D"anchor" href=3D"https://msva.github.io/lua-htm=
lparser/#license"><span class=3D"octicon octicon-link"></span></a>License</=
h2>

<p>LGPL+; see <code>./doc/LICENSE</code></p>
      </section>
    </div>

    <!-- FOOTER  -->
    <div id=3D"footer_wrap" class=3D"outer">
      <footer class=3D"inner">
        <p class=3D"copyright">LuaRock "htmlparser" maintained by <a href=
=3D"https://github.com/wscherphof">wscherphof</a></p>
        <p>Published with <a href=3D"http://pages.github.com/">GitHub Pages=
</a></p>
      </footer>
    </div>

   =20

 =20

</body></html>
------MultipartBoundary--jClecEnZR2ePqNzar4qF3LUPYBfZHrfdX0WC4SnGTl----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://msva.github.io/lua-htmlparser/images/sprite_download.png

iVBORw0KGgoAAAANSUhEUgAAALQAAACMCAYAAADV5IPyAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAyJpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdp
bj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6
eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEz
NDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJo
dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlw
dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAv
IiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RS
ZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpD
cmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBNYWNpbnRvc2giIHhtcE1NOkluc3RhbmNl
SUQ9InhtcC5paWQ6MjIyRDNFODI2NEQyMTFFMTlDM0FGM0Q3MENFRUQxMEQiIHhtcE1NOkRvY3Vt
ZW50SUQ9InhtcC5kaWQ6MjIyRDNFODM2NEQyMTFFMTlDM0FGM0Q3MENFRUQxMEQiPiA8eG1wTU06
RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDoyMjJEM0U4MDY0RDIxMUUxOUMz
QUYzRDcwQ0VFRDEwRCIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDoyMjJEM0U4MTY0RDIxMUUx
OUMzQUYzRDcwQ0VFRDEwRCIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1w
bWV0YT4gPD94cGFja2V0IGVuZD0iciI/PjgTewEAAD4TSURBVHja7H1plBxXleaLyMyqUqm0L7a8
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

------MultipartBoundary--jClecEnZR2ePqNzar4qF3LUPYBfZHrfdX0WC4SnGTl----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://msva.github.io/lua-htmlparser/images/icon_download.png

iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAyJpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdp
bj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6
eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEz
NDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJo
dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlw
dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAv
IiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RS
ZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpD
cmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBNYWNpbnRvc2giIHhtcE1NOkluc3RhbmNl
SUQ9InhtcC5paWQ6NzU3RDlENjU2NENGMTFFMTlDM0FGM0Q3MENFRUQxMEQiIHhtcE1NOkRvY3Vt
ZW50SUQ9InhtcC5kaWQ6NzU3RDlENjY2NENGMTFFMTlDM0FGM0Q3MENFRUQxMEQiPiA8eG1wTU06
RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo3NTdEOUQ2MzY0Q0YxMUUxOUMz
QUYzRDcwQ0VFRDEwRCIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDo3NTdEOUQ2NDY0Q0YxMUUx
OUMzQUYzRDcwQ0VFRDEwRCIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1w
bWV0YT4gPD94cGFja2V0IGVuZD0iciI/PizPAMAAAAD+SURBVHjaYvz//z/DQAAmhgECoxbTDbCQ
onjfvn1sQEoXi9QXJyenmzSzGAgkgPgMFvEjQGw7GsejFo9aPCCAEVftBCwsDIDUMSDmJNPsU6C8
DSxYfpHkY6CGC0AqjkxLnwKxPy5LCQY1UOMaINVEoqXfoZa+ICuo0YJ9HZAKJNLiCKClK6mVuKKB
+DIR6lqJsZRoi4GGgYLPE4hf41G2CYjrKU7VOILcEkgdAGI2NKnL0BT8kSb5GGjwcSCVjiYMCoUg
UiwlqwABWrAASPVBub+giekOTVsgSKAMiLVA8Qq0dB9ZJoDimBy8d+9eTnL1gjDjaIN+1GJaAYAA
AwAgK521F3s41QAAAABJRU5ErkJggg==

------MultipartBoundary--jClecEnZR2ePqNzar4qF3LUPYBfZHrfdX0WC4SnGTl----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://msva.github.io/lua-htmlparser/images/blacktocat.png

iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAyJpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdp
bj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6
eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEz
NDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJo
dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlw
dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAv
IiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RS
ZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpD
cmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBNYWNpbnRvc2giIHhtcE1NOkluc3RhbmNl
SUQ9InhtcC5paWQ6MThBNjRGRkE1Q0Q1MTFFMTk1RjJEQzIzMDMyRjZFQTciIHhtcE1NOkRvY3Vt
ZW50SUQ9InhtcC5kaWQ6MThBNjRGRkI1Q0Q1MTFFMTk1RjJEQzIzMDMyRjZFQTciPiA8eG1wTU06
RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo0Q0Q4RjRFQjVDRDIxMUUxOTVG
MkRDMjMwMzJGNkVBNyIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDo0Q0Q4RjRFQzVDRDIxMUUx
OTVGMkRDMjMwMzJGNkVBNyIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1w
bWV0YT4gPD94cGFja2V0IGVuZD0iciI/PgjAdMsAAAIISURBVHjazFfdbYQwDD5OfS8jZINmhBvh
Nmg6QW8ENmAERqAbcBtwNwFsABvQpHLQJ9cOf32oJQvFIf5ix7GdbJqm078lvznnufLcTTI1nkvP
dqW+5GTuufA8TNsobOKyBJwpE2HntWcD4tHz3fPTc08cAF7py6398vyRZdm4ymJyK1Jwr1vhPkPH
gdQG+SKwAFrsiAdDgJHCUeUqcHAv+9mRknwj8IXiA61vRWD6ESPWkbwGl12Z8guA8ECM6yvJewhc
KD/w67M2wgvFIDMD02RU2DGXdNM+Kph3IlUI7LiLYVG7E7hheproMQSuUZiI8K3kFF3BA6czXPw7
C9DPg5n2nSWTSD9Z7QzZ6ckW2oPA83rKXj0N3yJwpP6Pawu//z3KU8DjQeBHavIFz4Tl0P6ouynA
jOQBtNgQUK4E21bqSefIjHjwO9YKO652XqUWczyrAy7e4xKEFiqMhXS6pRmohGqEGCYCWyGlXdk4
J1mpgNWxmimdzIBexSLRCFY7IQNpru8SAVYKVU9M5PP54PlD3h5ANo8V0KtUk3kjUHJwOoZOaOZ+
faW+jcWGTbU+rWK5IUXNGmCydEhUPTEQeL/kWHlTgZWGz63tMnMoldhplrSRjgFPynjQutOlhv62
cH+Hhabe7npJgPW3DS1QvfSKSL4ktH6ZirgRpkNef0ivBg34W4ABABP+RZWxkiCuAAAAAElFTkSu
QmCC

------MultipartBoundary--jClecEnZR2ePqNzar4qF3LUPYBfZHrfdX0WC4SnGTl----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://msva.github.io/lua-htmlparser/images/bg_hr.png

iVBORw0KGgoAAAANSUhEUgAAAAQAAAAVCAYAAABhe09AAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAyJpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdp
bj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6
eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEz
NDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJo
dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlw
dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAv
IiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RS
ZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpD
cmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBNYWNpbnRvc2giIHhtcE1NOkluc3RhbmNl
SUQ9InhtcC5paWQ6NDc2NTRCRUYxOTI5MTFFMThFOTI4ODE2RDQ0NjlDQTMiIHhtcE1NOkRvY3Vt
ZW50SUQ9InhtcC5kaWQ6NDc2NTRCRjAxOTI5MTFFMThFOTI4ODE2RDQ0NjlDQTMiPiA8eG1wTU06
RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo0NzY1NEJFRDE5MjkxMUUxOEU5
Mjg4MTZENDQ2OUNBMyIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDo0NzY1NEJFRTE5MjkxMUUx
OEU5Mjg4MTZENDQ2OUNBMyIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1w
bWV0YT4gPD94cGFja2V0IGVuZD0iciI/Ph0kO64AAAAjSURBVHjaYvz//z8DMmBiQAODRuD8+fP/
QRgmwDhknA4QYAAZ9Az7Xf3eQwAAAABJRU5ErkJggg==

------MultipartBoundary--jClecEnZR2ePqNzar4qF3LUPYBfZHrfdX0WC4SnGTl----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://msva.github.io/lua-htmlparser/stylesheets/pygment_trac.css

@charset "utf-8";

.highlight .hll { background-color: rgb(255, 255, 204); }

.highlight { background: rgb(240, 243, 243); }

.highlight .c { color: rgb(0, 153, 255); font-style: italic; }

.highlight .err { color: rgb(170, 0, 0); background-color: rgb(255, 170, 17=
0); }

.highlight .k { color: rgb(0, 102, 153); font-weight: bold; }

.highlight .o { color: rgb(85, 85, 85); }

.highlight .cm { color: rgb(0, 153, 255); font-style: italic; }

.highlight .cp { color: rgb(0, 153, 153); }

.highlight .c1 { color: rgb(0, 153, 255); font-style: italic; }

.highlight .cs { color: rgb(0, 153, 255); font-weight: bold; font-style: it=
alic; }

.highlight .gd { background-color: rgb(255, 204, 204); border: 1px solid rg=
b(204, 0, 0); }

.highlight .ge { font-style: italic; }

.highlight .gr { color: rgb(255, 0, 0); }

.highlight .gh { color: rgb(0, 51, 0); font-weight: bold; }

.highlight .gi { background-color: rgb(204, 255, 204); border: 1px solid rg=
b(0, 204, 0); }

.highlight .go { color: rgb(170, 170, 170); }

.highlight .gp { color: rgb(0, 0, 153); font-weight: bold; }

.highlight .gs { font-weight: bold; }

.highlight .gu { color: rgb(0, 51, 0); font-weight: bold; }

.highlight .gt { color: rgb(153, 204, 102); }

.highlight .kc { color: rgb(0, 102, 153); font-weight: bold; }

.highlight .kd { color: rgb(0, 102, 153); font-weight: bold; }

.highlight .kn { color: rgb(0, 102, 153); font-weight: bold; }

.highlight .kp { color: rgb(0, 102, 153); }

.highlight .kr { color: rgb(0, 102, 153); font-weight: bold; }

.highlight .kt { color: rgb(0, 119, 136); font-weight: bold; }

.highlight .m { color: rgb(255, 102, 0); }

.highlight .s { color: rgb(204, 51, 0); }

.highlight .na { color: rgb(51, 0, 153); }

.highlight .nb { color: rgb(51, 102, 102); }

.highlight .nc { color: rgb(0, 170, 136); font-weight: bold; }

.highlight .no { color: rgb(51, 102, 0); }

.highlight .nd { color: rgb(153, 153, 255); }

.highlight .ni { color: rgb(153, 153, 153); font-weight: bold; }

.highlight .ne { color: rgb(204, 0, 0); font-weight: bold; }

.highlight .nf { color: rgb(204, 0, 255); }

.highlight .nl { color: rgb(153, 153, 255); }

.highlight .nn { color: rgb(0, 204, 255); font-weight: bold; }

.highlight .nt { color: rgb(51, 0, 153); font-weight: bold; }

.highlight .nv { color: rgb(0, 51, 51); }

.highlight .ow { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .w { color: rgb(187, 187, 187); }

.highlight .mf { color: rgb(255, 102, 0); }

.highlight .mh { color: rgb(255, 102, 0); }

.highlight .mi { color: rgb(255, 102, 0); }

.highlight .mo { color: rgb(255, 102, 0); }

.highlight .sb { color: rgb(204, 51, 0); }

.highlight .sc { color: rgb(204, 51, 0); }

.highlight .sd { color: rgb(204, 51, 0); font-style: italic; }

.highlight .s2 { color: rgb(204, 51, 0); }

.highlight .se { color: rgb(204, 51, 0); font-weight: bold; }

.highlight .sh { color: rgb(204, 51, 0); }

.highlight .si { color: rgb(170, 0, 0); }

.highlight .sx { color: rgb(204, 51, 0); }

.highlight .sr { color: rgb(51, 170, 170); }

.highlight .s1 { color: rgb(204, 51, 0); }

.highlight .ss { color: rgb(255, 204, 51); }

.highlight .bp { color: rgb(51, 102, 102); }

.highlight .vc { color: rgb(0, 51, 51); }

.highlight .vg { color: rgb(0, 51, 51); }

.highlight .vi { color: rgb(0, 51, 51); }

.highlight .il { color: rgb(255, 102, 0); }

.type-csharp .highlight .k { color: rgb(0, 0, 255); }

.type-csharp .highlight .kt { color: rgb(0, 0, 255); }

.type-csharp .highlight .nf { color: rgb(0, 0, 0); font-weight: normal; }

.type-csharp .highlight .nc { color: rgb(43, 145, 175); }

.type-csharp .highlight .nn { color: rgb(0, 0, 0); }

.type-csharp .highlight .s { color: rgb(163, 21, 21); }

.type-csharp .highlight .sc { color: rgb(163, 21, 21); }
------MultipartBoundary--jClecEnZR2ePqNzar4qF3LUPYBfZHrfdX0WC4SnGTl----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://msva.github.io/lua-htmlparser/stylesheets/stylesheet.css

@charset "utf-8";

@import url("pygment_trac.css");

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, b=
lockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, i=
mg, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i=
, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, cap=
tion, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, emb=
ed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, se=
ction, summary, time, mark, audio, video { margin: 0px; padding: 0px; borde=
r: 0px; font: inherit; vertical-align: baseline; }

article, aside, details, figcaption, figure, footer, header, hgroup, menu, =
nav, section { display: block; }

ol, ul { list-style: none; }

table { border-collapse: collapse; border-spacing: 0px; }

body { box-sizing: border-box; color: rgb(55, 55, 55); background: rgb(33, =
33, 33); font-size: 16px; font-family: "Myriad Pro", Calibri, Helvetica, Ar=
ial, sans-serif; line-height: 1.5; -webkit-font-smoothing: antialiased; }

h1, h2, h3, h4, h5, h6 { margin: 10px 0px; font-weight: 700; color: rgb(34,=
 34, 34); font-family: "Lucida Grande", Calibri, Helvetica, Arial, sans-ser=
if; letter-spacing: -1px; }

h1 { font-size: 36px; font-weight: 700; }

h2 { padding-bottom: 10px; font-size: 32px; background: url("../images/bg_h=
r.png") center bottom repeat-x; }

h3 { font-size: 24px; }

h4 { font-size: 21px; }

h5 { font-size: 18px; }

h6 { font-size: 16px; }

p { margin: 10px 0px 15px; }

footer p { color: rgb(242, 242, 242); }

a { text-decoration: none; color: rgb(0, 126, 223); text-shadow: none; tran=
sition: text-shadow 0.5s; }

a:hover, a:focus { text-decoration: underline; }

footer a { color: rgb(242, 242, 242); text-decoration: underline; }

em { font-style: italic; }

strong { font-weight: bold; }

img { position: relative; max-width: 739px; padding: 5px; margin: 10px 0px;=
 border: 1px solid rgb(235, 235, 235); box-shadow: rgb(235, 235, 235) 0px 0=
px 5px; }

p img { display: inline; margin: 0px; padding: 0px; vertical-align: middle;=
 text-align: center; border: none; }

pre, code { width: 100%; color: rgb(34, 34, 34); background-color: rgb(255,=
 255, 255); font-family: Monaco, "Bitstream Vera Sans Mono", "Lucida Consol=
e", Terminal, monospace; font-size: 14px; border-radius: 2px; }

pre { width: 100%; padding: 10px; box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 10=
px; overflow: auto; }

code { padding: 3px; margin: 0px 3px; box-shadow: rgba(0, 0, 0, 0.1) 0px 0p=
x 10px; }

pre code { display: block; box-shadow: none; }

blockquote { color: rgb(102, 102, 102); margin-bottom: 20px; padding: 0px 0=
px 0px 20px; border-left: 3px solid rgb(187, 187, 187); }

ul, ol, dl { margin-bottom: 15px; }

ul { list-style: inside; padding-left: 20px; }

ol { list-style: inside decimal; padding-left: 20px; }

dl dt { font-weight: bold; }

dl dd { padding-left: 20px; font-style: italic; }

dl p { padding-left: 20px; font-style: italic; }

hr { height: 1px; margin-bottom: 5px; border: none; background: url("../ima=
ges/bg_hr.png") center center repeat-x; }

table { border: 1px solid rgb(55, 55, 55); margin-bottom: 20px; text-align:=
 left; }

th { font-family: "Lucida Grande", "Helvetica Neue", Helvetica, Arial, sans=
-serif; padding: 10px; background: rgb(55, 55, 55); color: rgb(255, 255, 25=
5); }

td { padding: 10px; border: 1px solid rgb(55, 55, 55); }

form { background: rgb(242, 242, 242); padding: 20px; }

.outer { width: 100%; }

.inner { position: relative; max-width: 640px; padding: 20px 10px; margin: =
0px auto; }

#forkme_banner { display: block; position: absolute; top: 0px; right: 10px;=
 z-index: 10; padding: 10px 50px 10px 10px; color: rgb(255, 255, 255); back=
ground: url("../images/blacktocat.png") 95% 50% no-repeat rgb(0, 144, 255);=
 font-weight: 700; box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 10px; border-bott=
om-left-radius: 2px; border-bottom-right-radius: 2px; }

#header_wrap { background: -webkit-linear-gradient(top, rgb(55, 55, 55), rg=
b(33, 33, 33)); }

#header_wrap .inner { padding: 50px 10px 30px; }

#project_title { margin: 0px; color: rgb(255, 255, 255); font-size: 42px; f=
ont-weight: 700; text-shadow: rgb(17, 17, 17) 0px 0px 10px; }

#project_tagline { color: rgb(255, 255, 255); font-size: 24px; font-weight:=
 300; background: none; text-shadow: rgb(17, 17, 17) 0px 0px 10px; }

#downloads { position: absolute; width: 210px; z-index: 10; bottom: -40px; =
right: 0px; height: 70px; background: url("../images/icon_download.png") 0%=
 90% no-repeat; }

.zip_download_link { display: block; float: right; width: 90px; height: 70p=
x; text-indent: -5000px; overflow: hidden; background: url("../images/sprit=
e_download.png") left bottom no-repeat; }

.tar_download_link { display: block; float: right; width: 90px; height: 70p=
x; text-indent: -5000px; overflow: hidden; background: url("../images/sprit=
e_download.png") right bottom no-repeat; margin-left: 10px; }

.zip_download_link:hover { background: url("../images/sprite_download.png")=
 left top no-repeat; }

.tar_download_link:hover { background: url("../images/sprite_download.png")=
 right top no-repeat; }

#main_content_wrap { background: rgb(242, 242, 242); border-top: 1px solid =
rgb(17, 17, 17); border-bottom: 1px solid rgb(17, 17, 17); }

#main_content { padding-top: 40px; }

#footer_wrap { background: rgb(33, 33, 33); }

@media screen and (max-width: 480px) {
  body { font-size: 14px; }
  #downloads { display: none; }
  .inner { min-width: 320px; max-width: 480px; }
  #project_title { font-size: 32px; }
  h1 { font-size: 28px; }
  h2 { font-size: 24px; }
  h3 { font-size: 21px; }
  h4 { font-size: 18px; }
  h5 { font-size: 14px; }
  h6 { font-size: 12px; }
  code, pre { min-width: 320px; max-width: 480px; font-size: 11px; }
}
------MultipartBoundary--jClecEnZR2ePqNzar4qF3LUPYBfZHrfdX0WC4SnGTl------
